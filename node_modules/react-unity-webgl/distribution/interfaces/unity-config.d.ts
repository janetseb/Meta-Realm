import { IWebGLContextAttributes } from "./webgl-context-attributes";
/**
 * The Unity config is provided when instantiating a Unity context. This config
 * will eventually be used to create the Unity arguments which will be passed
 * to the create Unity instance method in order to initialize it.
 */
interface IUnityConfig {
    /**
     * The url to the build json file generated by Unity. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     */
    readonly loaderUrl: string;
    /**
     * The url to the build data file generated by Unity. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     */
    readonly dataUrl: string;
    /**
     * The url to the framework file generated by Unity. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     */
    readonly frameworkUrl: string;
    /**
     * The url to the unity code file generated by Unity. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     */
    readonly codeUrl: string;
    /**
     * The url where the streaming assets can be found. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     */
    readonly streamingAssetsUrl?: string;
    /**
     * The url to the framework file generated by Unity. When using a relative url,
     * keep in mind this is relative from the path where your html file is served.
     * This is set to the memory file when memory is stored in an external file,
     * otherwise it is set to an empty string.
     */
    readonly memoryUrl?: string;
    /**
     * The url to the unity code file generated by Unity. When using a relative
     * url, keep in mind this is relative from the path where your html file is
     * served. This is set to the JSON file containing debug symbols when the
     * current build is using debug symbols, otherwise it is set to an empty
     * string.
     */
    readonly symbolsUrl?: string;
    /**
     * The application's company name. This argument is treated as meta data
     * which will be provided to the Unity Instance.
     */
    readonly companyName?: string;
    /**
     * The application's product name. This argument is treated as meta data
     * which will be provided to the Unity Instance.
     */
    readonly productName?: string;
    /**
     * The application's product version. This argument is treated as meta data
     * which will be provided to the Unity Instance.
     */
    readonly productVersion?: string;
    /**
     * This object allow you to configure WebGLRenderingContext creation options
     * which will be pass additional context attributes to the Unity canvas.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext
     */
    readonly webglContextAttributes?: IWebGLContextAttributes;
}
export type { IUnityConfig };
//# sourceMappingURL=unity-config.d.ts.map